Please rewrite the following code and fix the security vulnerability. Here are a few examples. Let's think step by step about this problem.
Function Name: create_basename_core
Vulnerability: cwe-022
Code:
def create_basename_core(basename):
    try:
        basename = basename.casefold()
    except Exception:
        basename = basename.lower()

    basename = basename.replace(' ', '-')
    basename = re.sub(r'<[^>]*>', r'', basename)
    basename = re.sub(r'[^a-z0-9\\-]', r'', basename)
    basename = re.sub(r'\\-\\-', r'-', basename)
    basename = urllib.parse.quote_plus(basename)

    return basename

Explanation: The issue in the code lies in the improper sanitization of basename. That is, we do not check for inputs that match the pattern './', which could cause path traversal vulnerabilities. Hence, we should add a regex statement for replacing any occurence of this pattern in basename.
Answer:
def create_basename_core(basename):
    try:
        basename = basename.casefold()
    except Exception:
        basename = basename.lower()

    basename = re.sub(r'[ \./]', r'-', basename)
    basename = re.sub(r'<[^>]*>', r'', basename)
    basename = re.sub(r'[^a-z0-9\\-]', r'', basename)
    basename = re.sub(r'\\-\\-', r'-', basename)
    basename = urllib.parse.quote_plus(basename)

    return basename
Function Name: *func_name*
Vulnerability: cwe-022
Code: 
*func_src_before*

Explanation:
Answer:

